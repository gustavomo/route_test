{
  "parser": "@typescript-eslint/parser",
  "env": {
    "node": true
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parserOptions": {
    "project": [
      "./tsconfig.json"
    ]
  },
  "rules": {
    "@typescript-eslint/no-unused-vars": "off",
    "curly": "error",
    "no-console": "error",
    "no-var": "error",
    "prefer-const": "error",
    "spaced-comment": "error",
    "sort-keys": [
      "error"
    ],
    "sort-vars": [
      "error"
    ],
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "eol-last": [
      "error",
      "always"
    ],
    "indent": [
      "error",
      2
    ],
    "quotes": [
      "error",
      "single"
    ],
    "max-len": [
      "error",
      150
    ],
    "semi": [
      "error",
      "always"
    ],
    "switch-colon-spacing": [
      "error",
      {
        "after": true,
        "before": false
      }
    ],
    "sort-imports": [
      "error",
      {
        "allowSeparatedGroups": true,
        "ignoreCase": true
      }
    ],
    "no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "[IT]",
        "argsIgnorePattern": "^_$"
      }
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxEOF": 1,
        "maxBOF": 0
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "format": [
          "camelCase"
        ]
      },
      {
        "selector": "class",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": "classProperty",
        "format": [
          "snake_case"
        ]
      },
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^I",
          "match": true
        }
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^T",
          "match": true
        }
      }
    ]
  }
}